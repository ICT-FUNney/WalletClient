version: 2
jobs:
  build:
    docker:
      - image: node:10.15.2

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: npm i

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - run:
          name: Build
          command: npm run build

      - run:
          name: Check dist
          command: ls -la public

      - run:
          name: Install Firebase-tools
          command: npm install -g firebase-tools

      - run:
          name: Deploy to prd
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              firebase deploy --project "$FIREBASE_ID_1" --token "$FIREBASE_TOKEN"
            fi

      - run:
          name: Deploy to develop
          command: |
            if [ "${CIRCLE_BRANCH}" == "test" ]; then
              firebase deploy --project "$FIREBASE_ID_2" --token "$FIREBASE_TOKEN"
            fi

  versioning:
    docker:
      - image: node:10.15.2

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: npm i

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package-lock.json" }}

      - run:
          name: Set Git config
          command: |
            git config user.email circleci-fintech@gmail.com
            git config user.name circleci-fintech

      - run:
          name: Make CHANGELOG.md
          command: |
            npm install -g standard-version
            git checkout ${CIRCLE_BRANCH}
            git pull origin ${CIRCLE_BRANCH}
            BRANCH=${CIRCLE_BRANCH##*/}
            standard-version --release-as $BRANCH

      - run:
          name: Git push
          command: |
            git push origin --tags
            git push origin ${CIRCLE_BRANCH}:develop
            git push origin ${CIRCLE_BRANCH}:master
            git push origin :${CIRCLE_BRANCH}

workflows:
  version: 2
  build_flow:
    jobs:
      - build:
          filters:
            branches:
              only: /master|develop|test/

      - versioning:
          filters:
            branches:
              only: /^release\/(major|minor|patch)$/
